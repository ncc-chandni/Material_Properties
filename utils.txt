This file contains a collection of utility functions and classes for machine learning and data visualization, particularly tailored for tasks involving model evaluation and feature importance analysis. Here's a breakdown of its key components and their utilities:

### **1. Import Statements:**
   - **Libraries:** Imports essential libraries for data manipulation (`pandas`, `numpy`), visualization (`matplotlib`), and machine learning (`sklearn`).

### **2. MidpointNormalize Class:**
   - **Utility:** Custom normalization for colormaps. Useful for visualizing data where a central value (e.g., zero) is of particular interest. It normalizes data values between 0 and 1 with a midpoint at the specified central value.

### **3. plot_2d_grid_search Function:**
   - **Utility:** Visualizes the results of a grid search for hyperparameter tuning. It displays the mean test scores for combinations of hyperparameters in a heatmap format, helping to identify the best parameter values.

### **4. plot_learning_curve Function:**
   - **Utility:** Generates learning curves for training and cross-validation scores. Helps in understanding how the model's performance evolves with different sizes of the training dataset, aiding in diagnosing overfitting or underfitting.

### **5. rf_feature_importance Function:**
   - **Utility:** Extracts and visualizes feature importance from a trained Random Forest model. Shows the relative importance of each feature in predicting the target variable, which is useful for feature selection and interpretation.

### **6. plot_act_vs_pred Function:**
   - **Utility:** Plots actual vs. predicted values to evaluate the performance of a regression model. Adds a title if provided and helps visualize how well the model's predictions match the actual data.

### **7. get_roc_auc Function:**
   - **Utility:** Computes and optionally plots the ROC curve and AUC for binary classification. Helps in evaluating the performance of classification models, particularly their ability to distinguish between positive and negative classes.

### **8. get_classification_performance_metrics Function:**
   - **Utility:** Calculates classification metrics such as F-score, ROC AUC, precision, and recall. Provides insights into the model's performance in terms of false positives, false negatives, and overall accuracy.

### **9. MaterialsModel Class:**
   - **Utility:** Encapsulates a trained machine learning model for predicting properties based on chemical formulas. Scales and normalizes the input data and generates predictions, facilitating easy use of the trained model for new data.

### **Overall Utility:**
The file serves as a toolkit for:
- Evaluating machine learning models, including performance metrics and learning curves.
- Visualizing grid search results and feature importances.
- Normalizing data for effective visualization.
- Predicting material properties using trained models.

This set of utilities helps streamline various tasks related to model training, evaluation, and interpretation, making it easier to analyze and visualize machine learning results.